{"project":"profile/common/kernel-common","branch":"tizen","id":"I6abb30dca74ea063f4e73b3dce18dd8344413d7b","number":"32831","subject":"enabled CONFIG_EXT4_FS_SECURITY required to get smack labels","owner":{"name":"Vasyl Vavrychuk","email":"vasyl.vavrychuk@globallogic.com","username":"vvavrychuk"},"url":"https://review.tizen.org/gerrit/32831","commitMessage":"enabled CONFIG_EXT4_FS_SECURITY required to get smack labels\n\nWhithout it we can\u0027t get smack labels for example for user\u0027s home directories for which ext4 is used.\n\nChange-Id: I6abb30dca74ea063f4e73b3dce18dd8344413d7b\nSigned-off-by: Vasyl Vavrychuk \u003cvasyl.vavrychuk@globallogic.com\u003e\n","createdOn":1419459886,"lastUpdated":1420451060,"sortKey":"003242a80000803f","open":true,"status":"NEW","comments":[{"timestamp":1419459886,"reviewer":{"name":"Vasyl Vavrychuk","email":"vasyl.vavrychuk@globallogic.com","username":"vvavrychuk"},"message":"Uploaded patch set 1."},{"timestamp":1420197716,"reviewer":{"name":"Philippe Coval","email":"philippe.coval@open.eurogiciel.org","username":"pcoval"},"message":"Patch Set 1:\n\nPlease patch linux-stable instead"},{"timestamp":1420451060,"reviewer":{"name":"Vasyl Vavrychuk","email":"vasyl.vavrychuk@globallogic.com","username":"vvavrychuk"},"message":"Patch Set 1:\n\nHi, Philippe,\n\nI see this patch in linux-stable already. But linux-stable is not built for common profile as I see from here http://download.tizen.org/snapshots/tizen/common/latest/repos/arm-wayland/packages/armv7l/\n\nHow to make this patch available for common profile?"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"I016bf7761207d64535eaee25b18cc1a5c577ae55","number":"30925","subject":"mm: allow drivers to prevent new writable mappings","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30925","commitMessage":"mm: allow drivers to prevent new writable mappings\n\nThis patch (of 6):\n\nThe i_mmap_writable field counts existing writable mappings of an\naddress_space.  To allow drivers to prevent new writable mappings, make\nthis counter signed and prevent new writable mappings if it is negative.\nThis is modelled after i_writecount and DENYWRITE.\n\nThis will be required by the shmem-sealing infrastructure to prevent any\nnew writable mappings after the WRITE seal has been set.  In case there\nexists a writable mapping, this operation will fail with EBUSY.\n\nNote that we rely on the fact that iff you already own a writable mapping,\nyou can increase the counter without using the helpers.  This is the same\nthat we do for i_writecount.\n\nSigned-off-by: David Herrmann \u003cdh.herrmann@gmail.com\u003e\nAcked-by: Hugh Dickins \u003chughd@google.com\u003e\nCc: Michael Kerrisk \u003cmtk.manpages@gmail.com\u003e\nCc: Ryan Lortie \u003cdesrt@desrt.ca\u003e\nCc: Lennart Poettering \u003clennart@poettering.net\u003e\nCc: Daniel Mack \u003czonque@gmail.com\u003e\nCc: Andy Lutomirski \u003cluto@amacapital.net\u003e\nSigned-off-by: Andrew Morton \u003cakpm@linux-foundation.org\u003e\nSigned-off-by: Linus Torvalds \u003ctorvalds@linux-foundation.org\u003e\n\nChange-Id: I016bf7761207d64535eaee25b18cc1a5c577ae55\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id\u003d4bb5f5d9395bc112d93a134d8f5b05611eddc9c0\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265920,"sortKey":"0031f580000078cd","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085652,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417093076,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918631,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265920,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"I99ce680a1780f5a377e126ae491128d92b492988","number":"30926","subject":"shm: add sealing API","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30926","commitMessage":"shm: add sealing API\n\nIf two processes share a common memory region, they usually want some\nguarantees to allow safe access. This often includes:\n  - one side cannot overwrite data while the other reads it\n  - one side cannot shrink the buffer while the other accesses it\n  - one side cannot grow the buffer beyond previously set boundaries\n\nIf there is a trust-relationship between both parties, there is no need\nfor policy enforcement.  However, if there\u0027s no trust relationship (eg.,\nfor general-purpose IPC) sharing memory-regions is highly fragile and\noften not possible without local copies.  Look at the following two\nuse-cases:\n\n  1) A graphics client wants to share its rendering-buffer with a\n     graphics-server. The memory-region is allocated by the client for\n     read/write access and a second FD is passed to the server. While\n     scanning out from the memory region, the server has no guarantee that\n     the client doesn\u0027t shrink the buffer at any time, requiring rather\n     cumbersome SIGBUS handling.\n  2) A process wants to perform an RPC on another process. To avoid huge\n     bandwidth consumption, zero-copy is preferred. After a message is\n     assembled in-memory and a FD is passed to the remote side, both sides\n     want to be sure that neither modifies this shared copy, anymore. The\n     source may have put sensible data into the message without a separate\n     copy and the target may want to parse the message inline, to avoid a\n     local copy.\n\nWhile SIGBUS handling, POSIX mandatory locking and MAP_DENYWRITE provide\nways to achieve most of this, the first one is unproportionally ugly to\nuse in libraries and the latter two are broken/racy or even disabled due\nto denial of service attacks.\n\nThis patch introduces the concept of SEALING.  If you seal a file, a\nspecific set of operations is blocked on that file forever.  Unlike locks,\nseals can only be set, never removed.  Hence, once you verified a specific\nset of seals is set, you\u0027re guaranteed that no-one can perform the blocked\noperations on this file, anymore.\n\nAn initial set of SEALS is introduced by this patch:\n  - SHRINK: If SEAL_SHRINK is set, the file in question cannot be reduced\n            in size. This affects ftruncate() and open(O_TRUNC).\n  - GROW: If SEAL_GROW is set, the file in question cannot be increased\n          in size. This affects ftruncate(), fallocate() and write().\n  - WRITE: If SEAL_WRITE is set, no write operations (besides resizing)\n           are possible. This affects fallocate(PUNCH_HOLE), mmap() and\n           write().\n  - SEAL: If SEAL_SEAL is set, no further seals can be added to a file.\n          This basically prevents the F_ADD_SEAL operation on a file and\n          can be set to prevent others from adding further seals that you\n          don\u0027t want.\n\nThe described use-cases can easily use these seals to provide safe use\nwithout any trust-relationship:\n\n  1) The graphics server can verify that a passed file-descriptor has\n     SEAL_SHRINK set. This allows safe scanout, while the client is\n     allowed to increase buffer size for window-resizing on-the-fly.\n     Concurrent writes are explicitly allowed.\n  2) For general-purpose IPC, both processes can verify that SEAL_SHRINK,\n     SEAL_GROW and SEAL_WRITE are set. This guarantees that neither\n     process can modify the data while the other side parses it.\n     Furthermore, it guarantees that even with writable FDs passed to the\n     peer, it cannot increase the size to hit memory-limits of the source\n     process (in case the file-storage is accounted to the source).\n\nThe new API is an extension to fcntl(), adding two new commands:\n  F_GET_SEALS: Return a bitset describing the seals on the file. This\n               can be called on any FD if the underlying file supports\n               sealing.\n  F_ADD_SEALS: Change the seals of a given file. This requires WRITE\n               access to the file and F_SEAL_SEAL may not already be set.\n               Furthermore, the underlying file must support sealing and\n               there may not be any existing shared mapping of that file.\n               Otherwise, EBADF/EPERM is returned.\n               The given seals are _added_ to the existing set of seals\n               on the file. You cannot remove seals again.\n\nThe fcntl() handler is currently specific to shmem and disabled on all\nfiles. A file needs to explicitly support sealing for this interface to\nwork. A separate syscall is added in a follow-up, which creates files that\nsupport sealing. There is no intention to support this on other\nfile-systems. Semantics are unclear for non-volatile files and we lack any\nuse-case right now. Therefore, the implementation is specific to shmem.\n\nSigned-off-by: David Herrmann \u003cdh.herrmann@gmail.com\u003e\nAcked-by: Hugh Dickins \u003chughd@google.com\u003e\nCc: Michael Kerrisk \u003cmtk.manpages@gmail.com\u003e\nCc: Ryan Lortie \u003cdesrt@desrt.ca\u003e\nCc: Lennart Poettering \u003clennart@poettering.net\u003e\nCc: Daniel Mack \u003czonque@gmail.com\u003e\nCc: Andy Lutomirski \u003cluto@amacapital.net\u003e\nSigned-off-by: Andrew Morton \u003cakpm@linux-foundation.org\u003e\nSigned-off-by: Linus Torvalds \u003ctorvalds@linux-foundation.org\u003e\n\nChange-Id: I99ce680a1780f5a377e126ae491128d92b492988\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id\u003d40e041a2c858b3caefc757e26cb85bfceae5062b\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265908,"sortKey":"0031f57f000078ce","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085656,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417093024,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918630,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265908,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"I8349abe598b0bfc481a4947cb4bc8780c8b58f85","number":"30927","subject":"shm: add memfd_create() syscall","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30927","commitMessage":"shm: add memfd_create() syscall\n\nmemfd_create() is similar to mmap(MAP_ANON), but returns a file-descriptor\nthat you can pass to mmap().  It can support sealing and avoids any\nconnection to user-visible mount-points.  Thus, it\u0027s not subject to quotas\non mounted file-systems, but can be used like malloc()\u0027ed memory, but with\na file-descriptor to it.\n\nmemfd_create() returns the raw shmem file, so calls like ftruncate() can\nbe used to modify the underlying inode.  Also calls like fstat() will\nreturn proper information and mark the file as regular file.  If you want\nsealing, you can specify MFD_ALLOW_SEALING.  Otherwise, sealing is not\nsupported (like on all other regular files).\n\nCompared to O_TMPFILE, it does not require a tmpfs mount-point and is not\nsubject to a filesystem size limit.  It is still properly accounted to\nmemcg limits, though, and to the same overcommit or no-overcommit\naccounting as all user memory.\n\nSigned-off-by: David Herrmann \u003cdh.herrmann@gmail.com\u003e\nAcked-by: Hugh Dickins \u003chughd@google.com\u003e\nCc: Michael Kerrisk \u003cmtk.manpages@gmail.com\u003e\nCc: Ryan Lortie \u003cdesrt@desrt.ca\u003e\nCc: Lennart Poettering \u003clennart@poettering.net\u003e\nCc: Daniel Mack \u003czonque@gmail.com\u003e\nCc: Andy Lutomirski \u003cluto@amacapital.net\u003e\nSigned-off-by: Andrew Morton \u003cakpm@linux-foundation.org\u003e\nSigned-off-by: Linus Torvalds \u003ctorvalds@linux-foundation.org\u003e\n\nChange-Id: I8349abe598b0bfc481a4947cb4bc8780c8b58f85\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id\u003d9183df25fe7b194563db3fec6dc3202a5855839c\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265814,"sortKey":"0031f57e000078cf","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085659,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417092988,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918631,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265814,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"Ic564e4828fad503584e21f3c95e07e2e67bb1f6c","number":"30928","subject":"selftests: add memfd_create() + sealing tests","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30928","commitMessage":"selftests: add memfd_create() + sealing tests\n\nSome basic tests to verify sealing on memfds works as expected and\nguarantees the advertised semantics.\n\nSigned-off-by: David Herrmann \u003cdh.herrmann@gmail.com\u003e\nAcked-by: Hugh Dickins \u003chughd@google.com\u003e\nCc: Michael Kerrisk \u003cmtk.manpages@gmail.com\u003e\nCc: Ryan Lortie \u003cdesrt@desrt.ca\u003e\nCc: Lennart Poettering \u003clennart@poettering.net\u003e\nCc: Daniel Mack \u003czonque@gmail.com\u003e\nCc: Andy Lutomirski \u003cluto@amacapital.net\u003e\nSigned-off-by: Andrew Morton \u003cakpm@linux-foundation.org\u003e\nSigned-off-by: Linus Torvalds \u003ctorvalds@linux-foundation.org\u003e\n\nChange-Id: Ic564e4828fad503584e21f3c95e07e2e67bb1f6c\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id\u003d4f5ce5e8d7e2da3c714df8a7fa42edb9f992fc52\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265791,"sortKey":"0031f57d000078d0","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085663,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417092963,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918631,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265791,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"Iebe9152414b2ddea179a784739d1bd866fa08bf5","number":"30929","subject":"selftests: add memfd/sealing page-pinning tests","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30929","commitMessage":"selftests: add memfd/sealing page-pinning tests\n\nSetting SEAL_WRITE is not possible if there\u0027re pending GUP users. This\ncommit adds selftests for memfd+sealing that use FUSE to create pending\npage-references. FUSE is very helpful here in that it allows us to delay\ndirect-IO operations for an arbitrary amount of time. This way, we can\nforce the kernel to pin pages and then run our normal selftests.\n\nSigned-off-by: David Herrmann \u003cdh.herrmann@gmail.com\u003e\nAcked-by: Hugh Dickins \u003chughd@google.com\u003e\nCc: Michael Kerrisk \u003cmtk.manpages@gmail.com\u003e\nCc: Ryan Lortie \u003cdesrt@desrt.ca\u003e\nCc: Lennart Poettering \u003clennart@poettering.net\u003e\nCc: Daniel Mack \u003czonque@gmail.com\u003e\nCc: Andy Lutomirski \u003cluto@amacapital.net\u003e\nSigned-off-by: Andrew Morton \u003cakpm@linux-foundation.org\u003e\nSigned-off-by: Linus Torvalds \u003ctorvalds@linux-foundation.org\u003e\n\nChange-Id: Iebe9152414b2ddea179a784739d1bd866fa08bf5\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id\u003d87b2d44026e0e315a7401551e95b189ac4b28217\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265771,"sortKey":"0031f57d000078d1","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085666,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417092920,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918630,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265771,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"I861c03fbf6fd509ce481ea1f98b4447f9959347e","number":"30930","subject":"shm: wait for pins to be released when sealing","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30930","commitMessage":"shm: wait for pins to be released when sealing\n\nIf we set SEAL_WRITE on a file, we must make sure there cannot be any\nongoing write-operations on the file.  For write() calls, we simply lock\nthe inode mutex, for mmap() we simply verify there\u0027re no writable\nmappings.  However, there might be pages pinned by AIO, Direct-IO and\nsimilar operations via GUP.  We must make sure those do not write to the\nmemfd file after we set SEAL_WRITE.\n\nAs there is no way to notify GUP users to drop pages or to wait for them\nto be done, we implement the wait ourself: When setting SEAL_WRITE, we\ncheck all pages for their ref-count.  If it\u0027s bigger than 1, we know\nthere\u0027s some user of the page.  We then mark the page and wait for up to\n150ms for those ref-counts to be dropped.  If the ref-counts are not\ndropped in time, we refuse the seal operation.\n\nSigned-off-by: David Herrmann \u003cdh.herrmann@gmail.com\u003e\nAcked-by: Hugh Dickins \u003chughd@google.com\u003e\nCc: Michael Kerrisk \u003cmtk.manpages@gmail.com\u003e\nCc: Ryan Lortie \u003cdesrt@desrt.ca\u003e\nCc: Lennart Poettering \u003clennart@poettering.net\u003e\nCc: Daniel Mack \u003czonque@gmail.com\u003e\nCc: Andy Lutomirski \u003cluto@amacapital.net\u003e\nSigned-off-by: Andrew Morton \u003cakpm@linux-foundation.org\u003e\nSigned-off-by: Linus Torvalds \u003ctorvalds@linux-foundation.org\u003e\n\nChange-Id: I861c03fbf6fd509ce481ea1f98b4447f9959347e\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id\u003d05f65b5c70909ef686f865f0a85406d74d75f70f\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265743,"sortKey":"0031f57d000078d2","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085670,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417092882,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918631,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265743,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"I6ccdc5ae7d5d58a5e4f942da86821d84194de18c","number":"30931","subject":"ARM: wire up memfd_create syscall","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30931","commitMessage":"ARM: wire up memfd_create syscall\n\nAdd the memfd_create syscall to ARM.\n\nSigned-off-by: Russell King \u003crmk+kernel@arm.linux.org.uk\u003e\n\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id\u003de57e41931134e09fc6c03c8d4eb19d516cc6e59b\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n\nAdjusted __NR_syscalls as in commit eb6452537b280652eee66801ec97cc369e27e5d8.\n\nChange-Id: I6ccdc5ae7d5d58a5e4f942da86821d84194de18c\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265705,"sortKey":"0031f57c000078d3","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085674,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417092844,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918631,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265705,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"I52c5e56f2a9bc939ef53196b4c9e087f86b864b3","number":"30932","subject":"arm64: compat: wire up memfd_create and getrandom syscalls for aarch32","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30932","commitMessage":"arm64: compat: wire up memfd_create and getrandom syscalls for aarch32\n\narch/arm/ just grew support for the new memfd_create and getrandom\nsyscalls, so add them to our compat layer too.\n\nSigned-off-by: Will Deacon \u003cwill.deacon@arm.com\u003e\n\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id\u003da97a42c47608d0bb6f2dfc2e162cc84a27beb43a\n\ngetrandom isn\u0027t wired.\n\nChange-Id: I52c5e56f2a9bc939ef53196b4c9e087f86b864b3\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265684,"sortKey":"0031f57c000078d4","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085677,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417092766,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918631,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265684,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"Ib5a4963d686098938a35d4554314ae9869b3f35e","number":"30933","subject":"asm-generic: add memfd_create system call to unistd.h","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30933","commitMessage":"asm-generic: add memfd_create system call to unistd.h\n\nCommit 9183df25fe7b (\"shm: add memfd_create() syscall\") added a new\nsystem call (memfd_create) but didn\u0027t update the asm-generic unistd\nheader.\n\nThis patch adds the new system call to the asm-generic version of\nunistd.h so that it can be used by architectures such as arm64.\n\nChange-Id: Ib5a4963d686098938a35d4554314ae9869b3f35e\nCc: Arnd Bergmann \u003carnd@arndb.de\u003e\nReviewed-by: David Herrmann \u003cdh.herrmann@gmail.com\u003e\nSigned-off-by: Will Deacon \u003cwill.deacon@arm.com\u003e\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id\u003d503e6636b6f96056210062be703356f4253b6db9\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265659,"sortKey":"0031f57b000078d5","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085680,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417092751,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918631,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265659,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"Ib31c30494f2d34eeeff66d4803c1540c12ce2dd0","number":"30934","subject":"MIPS: Wire up new syscalls getrandom and memfd_create.","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30934","commitMessage":"MIPS: Wire up new syscalls getrandom and memfd_create.\n\nSigned-off-by: Ralf Baechle \u003cralf@linux-mips.org\u003e\n\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/stable/linux-stable.git/commit/?id\u003d42944521af97a3b25516f15f3149aec3779656dc\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n\ngetrandom isn\u0027t wired\n\nChange-Id: Ib31c30494f2d34eeeff66d4803c1540c12ce2dd0\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265645,"sortKey":"0031f57b000078d6","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085682,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417092705,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918631,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265645,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"Ib1755dd6037dbae5469ef6814bc9d765c0523b06","number":"30935","subject":"shm: add memfd.h to UAPI export list","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30935","commitMessage":"shm: add memfd.h to UAPI export list\n\nThe new header file memfd.h from commit 9183df25fe7b (\"shm: add\nmemfd_create() syscall\") should be exported.\n\nSigned-off-by: David Drysdale \u003cdrysdale@google.com\u003e\nReviewed-by: David Herrmann \u003cdh.herrmann@gmail.com\u003e\nCc: Hugh Dickins \u003chughd@google.com\u003e\nSigned-off-by: Andrew Morton \u003cakpm@linux-foundation.org\u003e\nSigned-off-by: Linus Torvalds \u003ctorvalds@linux-foundation.org\u003e\n\nChange-Id: Ib1755dd6037dbae5469ef6814bc9d765c0523b06\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id\u003db01d072065b6f36550f486fe77f05b092225ba1b\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265612,"sortKey":"0031f57a000078d7","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085685,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417092611,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918631,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265612,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"Ib84795d5af2a293c325c6a25f8d500569914801f","number":"30936","subject":"selftests/memfd: Run test on all architectures","owner":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"url":"https://review.tizen.org/gerrit/30936","commitMessage":"selftests/memfd: Run test on all architectures\n\nRemove the dependence on x86 to run the memfd test. Verfied on 32-bit powerpc.\n\nSigned-off-by: Pranith Kumar \u003cbobby.prani@gmail.com\u003e\nReviewed-by: David Herrmann \u003cdh.herrmann@gmail.com\u003e\nSigned-off-by: Shuah Khan \u003cshuahkh@osg.samsung.com\u003e\n\nChange-Id: Ib84795d5af2a293c325c6a25f8d500569914801f\nOrigin: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id\u003dce6a144a0d01c6628496e4c0d18fbf3a0362cc67\nBackported-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\nSigned-off-by: Maciej Wereski \u003cm.wereski@partner.samsung.com\u003e\n","createdOn":1417085620,"lastUpdated":1419265599,"sortKey":"0031f57a000078d8","open":true,"status":"NEW","comments":[{"timestamp":1417085620,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Uploaded patch set 1."},{"timestamp":1417085687,"reviewer":{"name":"Maciej Wereski","email":"m.wereski@partner.samsung.com","username":"mwereski"},"message":"Patch Set 1: Verified+1"},{"timestamp":1417089342,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1417092582,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 1: Code-Review+1"},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418918631,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Verified+1"},{"timestamp":1418918674,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Patch Set 2: Code-Review+1"},{"timestamp":1419265599,"reviewer":{"name":"Lukasz Skalski","email":"l.skalski@samsung.com","username":"lskalski"},"message":"Patch Set 2: Code-Review+1"}]}
{"project":"profile/common/kernel-common","branch":"tizen","topic":"memfd-for-kdbus","id":"Ia4aaf145f7b4b614d675483bb9b6641d8525959f","number":"31558","subject":"smack: introduce a special case for tmpfs in smack_d_instantiate()","owner":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"url":"https://review.tizen.org/gerrit/31558","commitMessage":"smack: introduce a special case for tmpfs in smack_d_instantiate()\n\nFiles created with __shmem_file_stup() appear to have somewhat fake\ndentries which make them look like root directories and not get\nthe label the current process or (\"*\") star meant for tmpfs files.\n\nOrigin: https://gitorious.org/smack-next/kernel/commit/92d42e856e\nSigned-off-by: Łukasz Stelmach \u003cl.stelmach@samsung.com\u003e\nChange-Id: Ia4aaf145f7b4b614d675483bb9b6641d8525959f\n","createdOn":1417795941,"lastUpdated":1418912516,"sortKey":"0031de7d00007b46","open":true,"status":"NEW","comments":[{"timestamp":1417795941,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 1."},{"timestamp":1418130037,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 2."},{"timestamp":1418910462,"reviewer":{"name":"Lukasz Stelmach","email":"l.stelmach@samsung.com","username":"lstelmach"},"message":"Uploaded patch set 3."},{"timestamp":1418912516,"reviewer":{"name":"Philippe Coval","email":"philippe.coval@open.eurogiciel.org","username":"pcoval"},"message":"Patch Set 3: Code-Review+1"}]}
